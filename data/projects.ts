export const projectsData = [
  {
    title: "MERN Application on Kubernetes",
    description: "Deployed a full-stack MERN (MongoDB, Express, React, Node.js) application on a Kubernetes cluster using Minikube. The project demonstrates containerization with Docker and orchestration with Kubernetes, following industry best practices. Built and deployed frontend and backend as separate containers, and exposed services via Kubernetes.",
    tools: ["Docker", "Kubernetes", "Minikube", "GitHub", "React", "Node.js", "Express", "MongoDB"],
    github: "https://github.com/thejagithub/MERN-Kubernetes-Deployment.git",
    //demo: "https://demo.example.com",
    image: "/K8 project.png",
    status: "completed" as const,
  },
  {
    title: "AWS Resource Manager",
    description: "Developed a lightweight and efficient Bash script to list various AWS resources across specified regions using AWS CLI. Ideal for quick audits, learning, and inventory management. Supports major AWS services like EC2, S3, IAM, Lambda, and more. Fully customizable, fast, and accepts user-defined inputs.",
    tools: ["Bash", "AWS CLI", "Ubuntu", "IAM (AWS)", "EC2 (AWS)", "S3 (AWS)", "Lambda (AWS)", "GitHub" ],
    github: "https://github.com/thejagithub/AWS-Resource-Manager.git",
    //demo: "https://demo.example.com",
    image: "/AWS Resource Manager.png",
    status: "completed" as const,
  },
  {
    title: "MERN Application on Docker Compose",
    description: "Developed a full-stack MERN application using Docker Compose, allowing for easy containerization and deployment of the application. The project demonstrates the use of Docker Compose to manage multiple containers, including frontend, backend, and database, and how to configure them to work together.",
    tools: ["Docker", "Docker Compose", "GitHub", "React", "Node.js", "Express", "MongoDB"],
    github: "https://github.com/thejagithub/MERN-Docker-Compose.git",
    //demo: "https://demo.example.com",
    image: "/MERN Docker.png",
    status: "completed" as const,
  },
  {
    title: "Ansible Apache Setup",
    description: "Developed an Ansible playbook to automate the setup of Apache web servers on multiple EC2 instances. The playbook ensures consistent configuration across all servers, making it ideal for initial server setup or system maintenance.",
    tools: ["Ansible", "Apache", "Ubuntu", "GitHub"],
    github: "https://github.com/thejagithub/Ansible-Apache-Setup.git",
    //demo: "https://demo.example.com",
    image: "/Ansible.png",
    status: "completed" as const,
  },
  {
    title: "End-to-End CI/CD Pipeline for a Java Application",
    description: "Implementing an end-to-end CI/CD pipeline for a Java-based application, following DevOps best practices for secure and scalable cloud deployment. The pipeline automates build and testing processes using Jenkins, Maven, and GitHub webhooks, with SonarQube integrated for static code analysis and quality assurance. The application is containerized with Docker and deployed to a Kubernetes cluster via Argo CD using a GitOps approach for version-controlled, repeatable deployments. Infrastructure was provisioned on an AWS EC2 instance, and Helm was used for managing Kubernetes manifests.",
    tools: ["Jenkins", "Maven", "SonarQube", "Argo CD", "Docker", "Kubernetes (minikube)", "Helm", "AWS EC2","GitHub"],
    // github: "https://github.com/username/cloud-migration",
    // demo: "https://demo.example.com",
    image: "/Java.png",
    status: "in-progress" as const,
  },
  // {
  //   title: "Security Compliance Scanner",
  //   description: "Automated security scanning and compliance reporting for containerized applications",
  //   tools: ["Trivy", "Falco", "Python", "PostgreSQL"],
  //   github: "https://github.com/username/security-scanner",
  //   demo: "https://demo.example.com",
  //   image: "/placeholder.svg?height=200&width=400&text=Security+Scanner",
  // },
  // {
  //   title: "GitOps Workflow Engine",
  //   description: "Complete GitOps implementation with automated deployments and rollback capabilities",
  //   tools: ["ArgoCD", "Flux", "GitHub Actions", "Kustomize"],
  //   github: "https://github.com/username/gitops-engine",
  //   demo: "https://demo.example.com",
  //   image: "/placeholder.svg?height=200&width=400&text=GitOps+Engine",
  // },
  // {
  //   title: "Multi-Cloud Cost Optimizer",
  //   description: "AI-powered cost optimization platform for AWS, Azure, and GCP resources",
  //   tools: ["Python", "TensorFlow", "AWS", "Azure", "GCP"],
  //   github: "https://github.com/username/cost-optimizer",
  //   demo: "https://demo.example.com",
  //   image: "/placeholder.svg?height=200&width=400&text=Cost+Optimizer",
  // },
]
